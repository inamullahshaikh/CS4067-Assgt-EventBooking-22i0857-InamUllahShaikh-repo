services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  mongodb:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - backend
    volumes:
      - mongo_data:/data/db
  user-service:
    build: ./user-services
    container_name: user-service
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    restart: always
    environment:
      DATABASE_URL: mongodb://mongo:27017/user_service_db
    networks:
      - backend

  event-service:
    build: ./event-services
    container_name: event-service
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    restart: always
    environment:
      DATABASE_URL: mongodb://mongo:27017/eventsdb
    networks:
      - backend

  booking-service:
    build: ./booking-services
    container_name: booking-service
    ports:
      - "5001:5001"
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      DATABASE_URL: mongodb://mongodb:27017/booking_db
    networks:
      - backend

  notification-service:
    build: ./notifications-services
    container_name: notification-service
    ports:
      - "5003:5003"
    depends_on:
      - mongodb
      - rabbitmq
    restart: always
    environment:
      DATABASE_URL: mongodb://mongo:27017/notificationsdb
    networks:
      - backend

  frontend:
    image: nginx:alpine
    container_name: frontend
    restart: always
    volumes:
      - ./frontend:/usr/share/nginx/html
    ports:
      - "80:80"

networks:
  backend:
    driver: bridge
    name: cs4067-assgt-eventbooking-i220857-Inam-Ullah-master_backend
  frontend:
    driver: bridge
    name: cs4067-assgt-eventbooking-i220857-Inam-Ullah-master_frontend

volumes:
  postgres_data:
  mongo_data:
